<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bank.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.bank.domain.Order">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun May 20 17:07:54 CST 2018.
        -->
        <id column="order_id" jdbcType="INTEGER" property="orderId"/>
        <result column="order_user" jdbcType="INTEGER" property="orderUser"/>
        <result column="order_fund" jdbcType="INTEGER" property="orderFund"/>
        <result column="order_state" jdbcType="INTEGER" property="orderState"/>
        <result column="order_money" jdbcType="DECIMAL" property="orderMoney"/>
        <result column="order_reduceratio" jdbcType="DECIMAL" property="orderReduceratio"/>
        <result column="order_reducemoney" jdbcType="DECIMAL" property="orderReducemoney"/>
        <result column="order_npv" jdbcType="DECIMAL" property="orderNpv"/>
        <result column="order_fundunit" jdbcType="DECIMAL" property="orderFundunit"/>
        <result column="order_time" jdbcType="TIMESTAMP" property="orderTime"/>
        <result column="order_card" jdbcType="VARCHAR" property="orderCard"/>
    </resultMap>

    <resultMap id="OrderMap" type="com.bank.domain.Order" extends="BaseResultMap">
        <result column="fund_id" jdbcType="INTEGER" property="orderFundObj.fundId"/>
        <result column="fund_num" jdbcType="VARCHAR" property="orderFundObj.fundNum"/>
        <result column="fund_investstate" jdbcType="INTEGER" property="orderFundObj.fundInveststate"/>
        <result column="fund_name" jdbcType="VARCHAR" property="orderFundObj.fundName"/>
        <result column="fund_productstate" jdbcType="INTEGER" property="orderFundObj.fundProductstate"/>
        <result column="fund_manager" jdbcType="INTEGER" property="orderFundObj.fundManager"/>
        <result column="fund_company" jdbcType="INTEGER" property="orderFundObj.fundCompany"/>
        <result column="fund_minbuymoney" jdbcType="DECIMAL" property="orderFundObj.fundMinbuymoney"/>
        <result column="fund_minsalemoney" jdbcType="DECIMAL" property="orderFundObj.fundMinsalemoney"/>
        <result column="fund_buyratio" jdbcType="DECIMAL" property="orderFundObj.fundBuyratio"/>
        <result column="fund_saleratio" jdbcType="DECIMAL" property="orderFundObj.fundSaleratio"/>
        <result column="fund_salebegintime" jdbcType="TIMESTAMP" property="orderFundObj.fundSalebegintime"/>
        <result column="fund_workbegintime" jdbcType="TIMESTAMP" property="orderFundObj.fundWorkbegintime"/>
        <result column="fund_text" jdbcType="VARCHAR" property="orderFundObj.fundText"/>
        <result column="fund_npv" jdbcType="DECIMAL" property="orderFundObj.fundNpv"/>
        <result column="fund_checkstate" jdbcType="INTEGER" property="orderFundObj.fundCheckstate"/>


        <result column="user_id" jdbcType="INTEGER" property="orderUserObj.userId"/>
        <result column="user_password" jdbcType="VARCHAR" property="orderUserObj.userPassword"/>
        <result column="user_identity" jdbcType="VARCHAR" property="orderUserObj.userIdentity"/>
        <result column="user_phone" jdbcType="VARCHAR" property="orderUserObj.userPhone"/>
        <result column="user_address" jdbcType="VARCHAR" property="orderUserObj.userAddress"/>
        <result column="user_email" jdbcType="VARCHAR" property="orderUserObj.userEmail"/>
        <result column="user_investstate" jdbcType="INTEGER" property="orderUserObj.userInveststate"/>
        <result column="user_signstate" jdbcType="INTEGER" property="orderUserObj.userSignstate"/>

    </resultMap>
    <select id="findOrderByUserAndfund" parameterType="java.lang.Integer" resultMap="OrderMap">
    SELECT *
	FROM
	`order`
	INNER JOIN `user` ON `order`.order_user = `user`.user_id
	INNER JOIN fund ON `order`.order_fund = fund.fund_id
	where order_user = #{orderUser,jdbcType=INTEGER} and  order_fund = #{orderFund,jdbcType=INTEGER}

  </select>
    <select id="findOrderByUser" parameterType="java.lang.Integer" resultMap="OrderMap">
    SELECT *
	FROM
	`order`
	INNER JOIN `user` ON `order`.order_user = `user`.user_id
	INNER JOIN fund ON `order`.order_fund = fund.fund_id
	where order_user = #{orderUser,jdbcType=INTEGER}

  </select>
    <select id="findAll" parameterType="java.lang.Integer" resultMap="OrderMap">
    SELECT *
	FROM
	`order`
	INNER JOIN `user` ON `order`.order_user = `user`.user_id
	INNER JOIN fund ON `order`.order_fund = fund.fund_id

  </select>
    <insert id="insert2" parameterType="com.bank.domain.Order">

     insert into `order` (order_user, order_fund,
      order_state, order_money, order_reduceratio,
      order_reducemoney, order_npv, order_fundunit,
      order_time, order_card)
    values (#{orderUser,jdbcType=INTEGER}, #{orderFund,jdbcType=INTEGER},
      #{orderState,jdbcType=INTEGER}, #{orderMoney,jdbcType=DECIMAL}, #{orderReduceratio,jdbcType=DECIMAL},
      #{orderReducemoney,jdbcType=DECIMAL}, #{orderNpv,jdbcType=DECIMAL}, #{orderFundunit,jdbcType=DECIMAL},
      #{orderTime,jdbcType=TIMESTAMP}, #{orderCard,jdbcType=VARCHAR})
  </insert>


    <sql id="Base_Column_List">

    order_id, order_user, order_fund, order_state, order_money, order_reduceratio, order_reducemoney,
    order_npv, order_fundunit, order_time, order_card
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List"/>
        from order
        where order_id = #{orderId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">

    delete from order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.bank.domain.Order">

    insert into order (order_id, order_user, order_fund,
    order_state, order_money, order_reduceratio,
    order_reducemoney, order_npv, order_fundunit,
    order_time, order_card)
    values (#{orderId,jdbcType=INTEGER}, #{orderUser,jdbcType=INTEGER}, #{orderFund,jdbcType=INTEGER},
    #{orderState,jdbcType=INTEGER}, #{orderMoney,jdbcType=DECIMAL}, #{orderReduceratio,jdbcType=DECIMAL},
    #{orderReducemoney,jdbcType=DECIMAL}, #{orderNpv,jdbcType=DECIMAL}, #{orderFundunit,jdbcType=DECIMAL},
    #{orderTime,jdbcType=TIMESTAMP}, #{orderCard,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.bank.domain.Order">

        insert into order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="orderUser != null">
                order_user,
            </if>
            <if test="orderFund != null">
                order_fund,
            </if>
            <if test="orderState != null">
                order_state,
            </if>
            <if test="orderMoney != null">
                order_money,
            </if>
            <if test="orderReduceratio != null">
                order_reduceratio,
            </if>
            <if test="orderReducemoney != null">
                order_reducemoney,
            </if>
            <if test="orderNpv != null">
                order_npv,
            </if>
            <if test="orderFundunit != null">
                order_fundunit,
            </if>
            <if test="orderTime != null">
                order_time,
            </if>
            <if test="orderCard != null">
                order_card,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=INTEGER},
            </if>
            <if test="orderUser != null">
                #{orderUser,jdbcType=INTEGER},
            </if>
            <if test="orderFund != null">
                #{orderFund,jdbcType=INTEGER},
            </if>
            <if test="orderState != null">
                #{orderState,jdbcType=INTEGER},
            </if>
            <if test="orderMoney != null">
                #{orderMoney,jdbcType=DECIMAL},
            </if>
            <if test="orderReduceratio != null">
                #{orderReduceratio,jdbcType=DECIMAL},
            </if>
            <if test="orderReducemoney != null">
                #{orderReducemoney,jdbcType=DECIMAL},
            </if>
            <if test="orderNpv != null">
                #{orderNpv,jdbcType=DECIMAL},
            </if>
            <if test="orderFundunit != null">
                #{orderFundunit,jdbcType=DECIMAL},
            </if>
            <if test="orderTime != null">
                #{orderTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderCard != null">
                #{orderCard,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bank.domain.Order">

        update order
        <set>
            <if test="orderUser != null">
                order_user = #{orderUser,jdbcType=INTEGER},
            </if>
            <if test="orderFund != null">
                order_fund = #{orderFund,jdbcType=INTEGER},
            </if>
            <if test="orderState != null">
                order_state = #{orderState,jdbcType=INTEGER},
            </if>
            <if test="orderMoney != null">
                order_money = #{orderMoney,jdbcType=DECIMAL},
            </if>
            <if test="orderReduceratio != null">
                order_reduceratio = #{orderReduceratio,jdbcType=DECIMAL},
            </if>
            <if test="orderReducemoney != null">
                order_reducemoney = #{orderReducemoney,jdbcType=DECIMAL},
            </if>
            <if test="orderNpv != null">
                order_npv = #{orderNpv,jdbcType=DECIMAL},
            </if>
            <if test="orderFundunit != null">
                order_fundunit = #{orderFundunit,jdbcType=DECIMAL},
            </if>
            <if test="orderTime != null">
                order_time = #{orderTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderCard != null">
                order_card = #{orderCard,jdbcType=VARCHAR},
            </if>
        </set>
        where order_id = #{orderId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bank.domain.Order">

    update order
    set order_user = #{orderUser,jdbcType=INTEGER},
    order_fund = #{orderFund,jdbcType=INTEGER},
    order_state = #{orderState,jdbcType=INTEGER},
    order_money = #{orderMoney,jdbcType=DECIMAL},
    order_reduceratio = #{orderReduceratio,jdbcType=DECIMAL},
    order_reducemoney = #{orderReducemoney,jdbcType=DECIMAL},
    order_npv = #{orderNpv,jdbcType=DECIMAL},
    order_fundunit = #{orderFundunit,jdbcType=DECIMAL},
    order_time = #{orderTime,jdbcType=TIMESTAMP},
    order_card = #{orderCard,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>